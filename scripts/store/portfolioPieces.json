[{"title":"Escape By Water","date":"January 1, 2016","description":"A clone of the popular frogger game built using a barebones game engine provided by Udacity. I worked heavily with the HTML5 canvas element in this project, and used JavaScript inheritance, the browser's local storage, and the Web Audio API while implementing various features. The game features a persistent scoreboard, menus, canvas-drawn buttons, and mobile support.","tags":["js","prototypal inheritance","canvas api","web audio api","npm","gulp"],"sourceURL":"https://github.com/Tempurturtul/udacity-fend-projects/tree/master/fend-frogger","liveURL":"https://tempurturtul.github.io/udacity-fend-projects/projects/fend-frogger/","image":{"static":"images/escape-by-water-600.png","responsive":[{"url":"images/escape-by-water-600.png","width":"600"},{"url":"images/escape-by-water-300.png","width":"300"}],"description":"The Escape By Water project."}},{"title":"Junior Dev","date":"September 13, 2016","description":"Personal homepage featuring my blog and portfolio. Built with semantic HTML, modular CSS, and vanilla JavaScript (no third-party code used). Includes JSDoc comments throughout, BEM methodology for CSS, a thoroughly tested hash router, an MVC design pattern, build scripts via npm, testing (incomplete) with tape and jsdom, and modularization of code using IIFEs.","tags":["js","css","html","testing","tape","jsdom","npm","bem","mvc","single-page application","jsdoc"],"sourceURL":"https://github.com/Tempurturtul/junior-dev","liveURL":"https://tempurturtul.github.io/junior-dev/","image":{"static":"images/junior-dev-600.png","responsive":[{"url":"images/junior-dev-600.png","width":"600"},{"url":"images/junior-dev-300.png","width":"300"}],"description":"The Junior Dev project."}},{"title":"Neighborhood Map","date":"May 1, 2016","description":"A single-page web application built using Knockout that displays a Google Map of an area, along with various user-defined map markers. Users can filter and organize map markers in a list with user-created (and optionally nested) folders. Clicking on a map marker displays additional information about the location retrieved from the Google, Flickr, Foursquare, and Wikipedia APIs.","tags":["js","css","html","jquery","knockout.js","google maps api","npm","gulp","bower","mvc","single-page application"],"sourceURL":"https://github.com/Tempurturtul/udacity-fend-projects/tree/master/fend-neighborhood-map","liveURL":"https://tempurturtul.github.io/udacity-fend-projects/projects/fend-neighborhood-map/","image":{"static":"images/neighborhood-map-600.png","responsive":[{"url":"images/neighborhood-map-600.png","width":"600"},{"url":"images/neighborhood-map-300.png","width":"300"}],"description":"The Neighborhood Map project."}},{"title":"Online Resume","date":"December 1, 2015","description":"My online resume for web development. It dynamically creates page content with data retrieved from a JSON object, allowing me to make quick and easy edits and updates. I utilized CSS transitions, a Polymer element, and Google Maps' API to provide additional functionality. I also expanded my workflow options with this project by learning to use Bower and by refining my usage of Gulp. I refactored the project two months after completing it to use a Model-View-Controller design pattern as part of Udactiy's JavaScript Design Patterns course.","tags":["js","css","html","jquery","polymer","google maps api","npm","gulp","bower","mvc"],"sourceURL":"https://github.com/Tempurturtul/udacity-fend-projects/tree/master/fend-resume","liveURL":"https://tempurturtul.github.io/udacity-fend-projects/projects/fend-resume/","image":{"static":"images/online-resume-600.png","responsive":[{"url":"images/online-resume-600.png","width":"600"},{"url":"images/online-resume-300.png","width":"300"}],"description":"The Online Resume project."}},{"title":"Twitch Streamers - Angular Refactor","date":"July 1, 2015","description":"Incomplete but functional refactor of my first web app to use AngularJS. It interfaces with Twitch.tv's API to retrieve and display information on a list of streamers. I learned AngularJS best practices while working on this refactor by following John Papa's Angular Style Guide.","tags":["js","css","html","angular.js","npm","gulp"],"sourceURL":"https://github.com/Tempurturtul/fcc-twitch-streamers/tree/angular-refactor"}]